{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\paval\\\\documents\\\\WebDev\\\\news-website\\\\src\\\\components\\\\Thread.js\";\nimport React from 'react';\n\nvar Thread =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Thread, _React$Component);\n\n  function Thread() {\n    _classCallCheck(this, Thread);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Thread).apply(this, arguments));\n  }\n\n  _createClass(Thread, [{\n    key: \"GetReddit\",\n    value: function () {\n      var _GetReddit = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(subreddit) {\n        var response, json;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"https://www.reddit.com/search.json?q=\".concat(subreddit));\n\n              case 2:\n                response = _context.sent;\n                _context.next = 5;\n                return response.json();\n\n              case 5:\n                json = _context.sent;\n                this.setState({\n                  data: json,\n                  gotData: true\n                });\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function GetReddit(_x) {\n        return _GetReddit.apply(this, arguments);\n      }\n\n      return GetReddit;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Thread;\n}(React.Component);\n\nexport default Thread;","map":{"version":3,"sources":["C:\\Users\\paval\\documents\\WebDev\\news-website\\src\\components\\Thread.js"],"names":["React","Thread","subreddit","fetch","response","json","setState","data","gotData","Component"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAEMC,M;;;;;;;;;;;;;;;;gDAGcC,S;;;;;;;uBACWC,KAAK,gDAAyCD,SAAzC,E;;;AAAtBE,gBAAAA,Q;;uBACaA,QAAQ,CAACC,IAAT,E;;;AAAbA,gBAAAA,I;AACN,qBAAKC,QAAL,CAAc;AACVC,kBAAAA,IAAI,EAAEF,IADI;AAEVG,kBAAAA,OAAO,EAAE;AAFC,iBAAd;;;;;;;;;;;;;;;;;;6BAMI;AACJ,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAKH;;;;EAlBgBR,KAAK,CAACS,S;;AAuB3B,eAAeR,MAAf","sourcesContent":["import React from 'react';\r\n\r\nclass Thread extends React.Component{\r\n\r\n\r\n    async GetReddit(subreddit) {\r\n        const response = await fetch(`https://www.reddit.com/search.json?q=${subreddit}`);\r\n        const json = await response.json();\r\n        this.setState({\r\n            data: json,\r\n            gotData: true\r\n    });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Thread;"]},"metadata":{},"sourceType":"module"}