{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\paval\\\\documents\\\\WebDev\\\\news-website\\\\src\\\\components\\\\Thread.js\";\nimport React from 'react';\n\nvar Thread =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Thread, _React$Component);\n\n  function Thread() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Thread);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Thread)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: undefined,\n      gotData: false\n    };\n    return _this;\n  }\n\n  _createClass(Thread, [{\n    key: \"GetReddit\",\n    value: function () {\n      var _GetReddit = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(subreddit) {\n        var response, json;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"https://www.reddit.com/\".concat(this.props.subreddit));\n\n              case 2:\n                response = _context.sent;\n                _context.next = 5;\n                return response.json();\n\n              case 5:\n                json = _context.sent;\n                console.log(json);\n                this.setState({\n                  data: json,\n                  gotData: true\n                });\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function GetReddit(_x) {\n        return _GetReddit.apply(this, arguments);\n      }\n\n      return GetReddit;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      this.GetReddit(this.props.subreddit);\n      console.log(data);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"thread0\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"thread\"));\n    }\n  }]);\n\n  return Thread;\n}(React.Component);\n\nexport default Thread;","map":{"version":3,"sources":["C:\\Users\\paval\\documents\\WebDev\\news-website\\src\\components\\Thread.js"],"names":["React","Thread","state","data","undefined","gotData","subreddit","fetch","props","response","json","console","log","setState","GetReddit","Component"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAEMC,M;;;;;;;;;;;;;;;;;UAEFC,K,GAAM;AACFC,MAAAA,IAAI,EAAEC,SADJ;AAEFC,MAAAA,OAAO,EAAE;AAFP,K;;;;;;;;;gDAKUC,S;;;;;;;uBACWC,KAAK,kCAA2B,KAAKC,KAAL,CAAWF,SAAtC,E;;;AAAtBG,gBAAAA,Q;;uBACaA,QAAQ,CAACC,IAAT,E;;;AAAbA,gBAAAA,I;AACNC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,qBAAKG,QAAL,CAAc;AACVV,kBAAAA,IAAI,EAAEO,IADI;AAEVL,kBAAAA,OAAO,EAAE;AAFC,iBAAd;;;;;;;;;;;;;;;;;;6BAMI;AACJ,WAAKS,SAAL,CAAe,KAAKN,KAAL,CAAWF,SAA1B;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYT,IAAZ;AACA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFA,CADJ;AAQH;;;;EA5BgBH,KAAK,CAACe,S;;AAiC3B,eAAed,MAAf","sourcesContent":["import React from 'react';\r\n\r\nclass Thread extends React.Component{\r\n\r\n    state={\r\n        data: undefined,\r\n        gotData: false\r\n    }\r\n\r\n    async GetReddit(subreddit) {\r\n        const response = await fetch(`https://www.reddit.com/${this.props.subreddit}`);\r\n        const json = await response.json();\r\n        console.log(json);\r\n        this.setState({\r\n            data: json,\r\n            gotData: true\r\n    });\r\n    }\r\n\r\n    render(){\r\n        this.GetReddit(this.props.subreddit);\r\n        console.log(data);\r\n        return(\r\n            <div>\r\n                <p>thread0</p>\r\n            <p>thread</p>\r\n            \r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Thread;"]},"metadata":{},"sourceType":"module"}