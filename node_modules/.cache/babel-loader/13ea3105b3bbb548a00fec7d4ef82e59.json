{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\src\\\\components\\\\Thread.js\";\nimport React from 'react';\nimport { Jumbotron, Button, Container, Row, Col, Media } from 'reactstrap';\n\nvar Thread =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Thread, _React$Component);\n\n  function Thread() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Thread);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Thread)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: _this.props,\n      time: _this.props.data.publishedAt\n    };\n    return _this;\n  }\n\n  _createClass(Thread, [{\n    key: \"render\",\n    value: function render() {\n      var realTime = this.state.time.substring(0, 10);\n      var imgStyle = {\n        maxHeight: 300,\n        maxWidth: 300\n      };\n      var mediaStyle = {\n        color: \"black\",\n        \"text-decoration\": \"none\"\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(Media, {\n        className: \"mb-4\",\n        href: this.props.data.url,\n        style: mediaStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Media, {\n        left: true,\n        href: this.props.data.url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Media, {\n        className: \"mr-4\",\n        object: true,\n        src: this.props.data.urlToImage,\n        style: imgStyle,\n        alt: \"Generic placeholder image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      })), React.createElement(Col, {\n        xs: \"12\",\n        sm: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Media, {\n        body: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(Media, {\n        heading: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, this.props.title), this.props.data.description, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Date Published:  \", realTime, \" \")))));\n    }\n  }]);\n\n  return Thread;\n}(React.Component);\n\nexport default Thread;","map":{"version":3,"sources":["C:\\Users\\paval\\Documents\\WebDev\\news-website\\src\\components\\Thread.js"],"names":["React","Jumbotron","Button","Container","Row","Col","Media","Thread","state","data","props","time","publishedAt","realTime","substring","imgStyle","maxHeight","maxWidth","mediaStyle","color","url","urlToImage","title","description","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,EAAmBC,MAAnB,EAA2BC,SAA3B,EAAsCC,GAAtC,EAA2CC,GAA3C,EAAgDC,KAAhD,QAA4D,YAA5D;;IAEMC,M;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AAEJC,MAAAA,IAAI,EAAG,MAAKC,KAFR;AAIJC,MAAAA,IAAI,EAAE,MAAKD,KAAL,CAAWD,IAAX,CAAgBG;AAJlB,K;;;;;;6BAQA;AAEJ,UAAIC,QAAQ,GAAG,KAAKL,KAAL,CAAWG,IAAX,CAAgBG,SAAhB,CAA0B,CAA1B,EAA4B,EAA5B,CAAf;AACA,UAAMC,QAAQ,GAAG;AACbC,QAAAA,SAAS,EAAE,GADE;AAEbC,QAAAA,QAAQ,EAAE;AAFG,OAAjB;AAKA,UAAMC,UAAU,GAAG;AACfC,QAAAA,KAAK,EAAE,OADQ;AAEf,2BAAoB;AAFL,OAAnB;AAMA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAiBN,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAE,MAAlB;AAAyB,QAAA,IAAI,EAAE,KAAKT,KAAL,CAAWD,IAAX,CAAgBW,GAA/C;AAAoD,QAAA,KAAK,EAAEF,UAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,KAAD;AAAO,QAAA,IAAI,MAAX;AAAY,QAAA,IAAI,EAAE,KAAKR,KAAL,CAAWD,IAAX,CAAgBW,GAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAQ,QAAA,SAAS,EAAE,MAAnB;AAA0B,QAAA,MAAM,MAAhC;AAAiC,QAAA,GAAG,EAAE,KAAKV,KAAL,CAAWD,IAAX,CAAgBY,UAAtD;AAAkE,QAAA,KAAK,EAAEN,QAAzE;AAAmF,QAAA,GAAG,EAAC,2BAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADA,EAIA,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,IAAR;AAAa,QAAA,EAAE,EAAC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,KAAD;AAAO,QAAA,IAAI,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,OAAO,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKL,KAAL,CAAWY,KADd,CADF,EAIO,KAAKZ,KAAL,CAAWD,IAAX,CAAgBc,WAJvB,EAKM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAqBV,QAArB,MALN,CADA,CAJA,CAjBM,CADJ;AAmCH;;;;EA1DgBb,KAAK,CAACwB,S;;AA8D3B,eAAejB,MAAf","sourcesContent":["import React from 'react';\r\nimport {Jumbotron, Button, Container, Row, Col, Media} from 'reactstrap';\r\n\r\nclass Thread extends React.Component{\r\n    state = {\r\n\r\n        data : this.props,\r\n\r\n        time: this.props.data.publishedAt\r\n\r\n    }\r\n\r\n    render(){\r\n\r\n        var realTime = this.state.time.substring(0,10);\r\n        const imgStyle = {\r\n            maxHeight: 300,\r\n            maxWidth: 300\r\n          }\r\n\r\n        const mediaStyle = {\r\n            color: \"black\",\r\n            \"text-decoration\" : \"none\"\r\n        }\r\n\r\n\r\n        return (\r\n            <div>\r\n\r\n      {/* <Jumbotron fluid style={{\"background\" : \"linear-gradient(0deg, rgba(110,157,163,0.23015143557422968) 0%, rgba(176,192,194,0.19373686974789917) 100%, rgba(209,209,209,0.8491990546218487) 100%, rgba(144,63,1,0.8604035364145658) 100%)\"}}>\r\n          <Container fluid>\r\n              <Row>\r\n                  <Col xs=\"12\" sm={{ size: 4, offset: 1 }} md={{ size: 4, offset: 1 }} lg={{ size: 4, offset: 1 }}  className = \"headline-thumbnail\">\r\n                    <img href={this.props.data.urlToImage} src={this.props.data.urlToImage} width=\"250\" height=\"200\" alt=\"me\" align=\"left\" />\r\n                    </Col>\r\n                    <Col xs=\"12\" sm={{ size: 6, offset: 0 }} md={{ size: 6, offset: 0 }} lg={{ size: 6, offset: 0 }}><h3><a className=\"link\" href={this.props.data.url}>{this.props.title}</a></h3>\r\n                    <h6>{this.props.data.description}</h6>\r\n                    {this.props.data.author && <p>Published by: {this.props.data.author}</p>}\r\n                    <p>Date Published:  {realTime} </p>\r\n                    <Button outline color=\"info\" href={this.props.data.url}>Learn More</Button>\r\n                    </Col>\r\n              </Row>\r\n        </Container>\r\n      </Jumbotron> */}\r\n      <Media className= \"mb-4\" href={this.props.data.url} style={mediaStyle}>\r\n      <Media left href={this.props.data.url}>\r\n        <Media  className= \"mr-4\" object src={this.props.data.urlToImage} style={imgStyle} alt=\"Generic placeholder image\" />\r\n      </Media>\r\n      <Col xs=\"12\" sm=\"12\">\r\n      <Media body>\r\n        <Media heading >\r\n          {this.props.title}\r\n        </Media>\r\n            {this.props.data.description}\r\n            <p>Date Published:  {realTime} </p>\r\n        </Media>\r\n        </Col>\r\n    </Media>\r\n        \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Thread;"]},"metadata":{},"sourceType":"module"}