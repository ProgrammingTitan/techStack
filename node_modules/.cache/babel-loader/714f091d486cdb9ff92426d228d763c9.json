{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\src\\\\components\\\\CategoryPage.js\";\nimport React from 'react';\nimport Nav from './Navigation';\nimport Thread from './Thread';\n\nvar CategoryPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CategoryPage, _React$Component);\n\n  function CategoryPage(props) {\n    var _this;\n\n    _classCallCheck(this, CategoryPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CategoryPage).call(this, props));\n    _this.state = {\n      data: {},\n      gotData: false,\n      inputText: '',\n      subreddit: _this.props.subreddit\n    };\n    return _this;\n  }\n\n  _createClass(CategoryPage, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var response, json;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"https://www.reddit.com/r/\".concat(this.state.subreddit, \"/.json\"));\n\n              case 2:\n                response = _context.sent;\n                _context.next = 5;\n                return response.json();\n\n              case 5:\n                json = _context.sent;\n                console.log(this.state.subreddit);\n                this.setState({\n                  data: json,\n                  gotData: true\n                });\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }() // async componentWillUpdate(){\n    //     const response = await fetch(`https://www.reddit.com/r/${this.state.subreddit}/.json`);\n    //     const json = await response.json();\n    //     console.log(this.state.subreddit);\n    //     this.setState({\n    //         data: json,\n    //         gotData: true,\n    //     });\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      // {window.location.reload()}\n\n      /*\r\n          console.log(\"1\");\r\n          this.getReddit = async (e)  => {\r\n      \r\n              console.log(\"1.5\");\r\n              e.preventDefault();\r\n      \r\n              let subreddit = this.props.subreddit;\r\n              const website = `https://www.reddit.com/r/${subreddit}/.json` ;\r\n              \r\n              const response = await fetch(website);\r\n              const json = await response.json();\r\n              console.log(website);\r\n              console.log(json);\r\n              \r\n              this.setState({\r\n                  data: json,\r\n                  gotData: true\r\n          });\r\n              // return this.state.data\r\n          }\r\n      \r\n          console.log(\"2\");\r\n          */\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), this.state.gotData && this.state.data.data.children.map(function (child, index) {\n        var data = child.data;\n        return React.createElement(Thread, {\n          key: data.id,\n          index: index + 1,\n          title: data.title,\n          points: data.score,\n          comments: data.num_comments,\n          subreddit: data.subreddit_name_prefixed,\n          user: data.author,\n          data: data,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return CategoryPage;\n}(React.Component);\n\nexport default CategoryPage;","map":{"version":3,"sources":["C:\\Users\\paval\\Documents\\WebDev\\news-website\\src\\components\\CategoryPage.js"],"names":["React","Nav","Thread","CategoryPage","props","state","data","gotData","inputText","subreddit","fetch","response","json","console","log","setState","children","map","child","index","id","title","score","num_comments","subreddit_name_prefixed","author","Component"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;IAGMC,Y;;;;;AAIF,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAEf,sFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,EADG;AAETC,MAAAA,OAAO,EAAE,KAFA;AAGTC,MAAAA,SAAS,EAAE,EAHF;AAITC,MAAAA,SAAS,EAAG,MAAKL,KAAL,CAAWK;AAJd,KAAb;AAHe;AASlB;;;;;;;;;;;;;;uBAM0BC,KAAK,oCAA6B,KAAKL,KAAL,CAAWI,SAAxC,Y;;;AAAtBE,gBAAAA,Q;;uBACaA,QAAQ,CAACC,IAAT,E;;;AAAbA,gBAAAA,I;AACNC,gBAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAL,CAAWI,SAAvB;AACA,qBAAKM,QAAL,CAAc;AACVT,kBAAAA,IAAI,EAAEM,IADI;AAEVL,kBAAAA,OAAO,EAAE;AAFC,iBAAd;;;;;;;;;;;;;;;QAWJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;;;;6BAGI;AACJ;;AACJ;;;;;;;;;;;;;;;;;;;;;;;;AAwBI,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAGgB,KAAKF,KAAL,CAAWE,OAAX,IAAsB,KAAKF,KAAL,CAAWC,IAAX,CAAgBA,IAAhB,CAAqBU,QAArB,CAA8BC,GAA9B,CAAkC,UAACC,KAAD,EAAQC,KAAR,EAAkB;AAAA,YAC9Db,IAD8D,GACrDY,KADqD,CAC9DZ,IAD8D;AAEtE,eACI,oBAAC,MAAD;AACI,UAAA,GAAG,EAAEA,IAAI,CAACc,EADd;AAEI,UAAA,KAAK,EAAED,KAAK,GAAG,CAFnB;AAGI,UAAA,KAAK,EAAEb,IAAI,CAACe,KAHhB;AAII,UAAA,MAAM,EAAEf,IAAI,CAACgB,KAJjB;AAKI,UAAA,QAAQ,EAAEhB,IAAI,CAACiB,YALnB;AAMI,UAAA,SAAS,EAAEjB,IAAI,CAACkB,uBANpB;AAOI,UAAA,IAAI,EAAElB,IAAI,CAACmB,MAPf;AAQI,UAAA,IAAI,EAAEnB,IARV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,OAdqB,CAHtC,CADJ;AAsBH;;;;EA/F0BN,KAAK,CAAC0B,S;;AAoGjC,eAAevB,YAAf","sourcesContent":["import React from 'react';\r\nimport Nav from './Navigation';\r\nimport Thread from './Thread';\r\n\r\n\r\nclass CategoryPage extends React.Component{\r\n  \r\n\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n        this.state = {\r\n            data: {},\r\n            gotData: false,\r\n            inputText: '',\r\n            subreddit : this.props.subreddit\r\n        };\r\n    }\r\n    \r\n    async componentDidMount() {\r\n\r\n\r\n\r\n        const response = await fetch(`https://www.reddit.com/r/${this.state.subreddit}/.json`);\r\n        const json = await response.json();\r\n        console.log(this.state.subreddit);\r\n        this.setState({\r\n            data: json,\r\n            gotData: true,\r\n            \r\n        });\r\n\r\n\r\n        \r\n\r\n    }\r\n\r\n    // async componentWillUpdate(){\r\n    //     const response = await fetch(`https://www.reddit.com/r/${this.state.subreddit}/.json`);\r\n    //     const json = await response.json();\r\n    //     console.log(this.state.subreddit);\r\n    //     this.setState({\r\n    //         data: json,\r\n    //         gotData: true,\r\n    //     });\r\n\r\n        \r\n\r\n    // }\r\n\r\n\r\nrender(){\r\n    // {window.location.reload()}\r\n/*\r\n    console.log(\"1\");\r\n    this.getReddit = async (e)  => {\r\n\r\n        console.log(\"1.5\");\r\n        e.preventDefault();\r\n\r\n        let subreddit = this.props.subreddit;\r\n        const website = `https://www.reddit.com/r/${subreddit}/.json` ;\r\n        \r\n        const response = await fetch(website);\r\n        const json = await response.json();\r\n        console.log(website);\r\n        console.log(json);\r\n        \r\n        this.setState({\r\n            data: json,\r\n            gotData: true\r\n    });\r\n        // return this.state.data\r\n    }\r\n\r\n    console.log(\"2\");\r\n    */\r\n    return(\r\n        <div>\r\n            <Nav />\r\n            {\r\n                        this.state.gotData && this.state.data.data.children.map((child, index) => {\r\n                            const { data } = child;\r\n                            return (\r\n                                <Thread\r\n                                    key={data.id}\r\n                                    index={index + 1}\r\n                                    title={data.title}\r\n                                    points={data.score}\r\n                                    comments={data.num_comments}\r\n                                    subreddit={data.subreddit_name_prefixed}\r\n                                    user={data.author}\r\n                                    data={data}\r\n                                />\r\n                            );\r\n                        })\r\n                    }\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n}\r\n\r\nexport default CategoryPage;"]},"metadata":{},"sourceType":"module"}