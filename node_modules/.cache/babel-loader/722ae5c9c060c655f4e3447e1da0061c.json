{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\src\\\\components\\\\admin\\\\auth\\\\LoginModal.js\";\nimport React from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Label, Input, Alert } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { login } from '../../../actions/authActions';\nimport { clearErrors } from '../../../actions/errorActions';\n\nvar LoginModal =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(LoginModal, _React$Component);\n\n  function LoginModal() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LoginModal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LoginModal)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      modal: false,\n      email: '',\n      password: '',\n      msg: null\n    };\n\n    _this.toggle = function () {\n      // Clear errors\n      _this.props.clearErrors();\n\n      _this.setState({\n        modal: !_this.state.modal\n      });\n    };\n\n    _this.onChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.onSubmit = function (e) {\n      e.preventDefault();\n      var _this$state = _this.state,\n          email = _this$state.email,\n          password = _this$state.password;\n      var user = {\n        email: email,\n        password: password // Attempt to login\n\n      };\n\n      _this.props.login(user);\n    };\n\n    return _this;\n  }\n\n  _createClass(LoginModal, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props = this.props,\n          error = _this$props.error,\n          isAuthenticated = _this$props.isAuthenticated;\n\n      if (error !== prevProps.error) {\n        //Check for register error\n        if (error.id === 'LOGIN_FAIL') {\n          this.setState({\n            msg: error.msg.msg\n          });\n        } else {\n          this.setState({\n            msg: null\n          });\n        }\n      } // IF Authenticated, close modal\n\n\n      if (this.state.modal) {\n        if (isAuthenticated) {\n          this.toggle();\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Login\"), React.createElement(Modal, {\n        isOpen: this.state.modal,\n        toggle: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Login\"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, this.state.msg ? React.createElement(Alert, {\n        color: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, this.state.msg) : null, React.createElement(Form, {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Email\"), React.createElement(Input, {\n        type: \"email\",\n        name: \"email\",\n        id: \"email\",\n        placeholder: \"Email\",\n        onChange: this.onChange,\n        className: \"mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), React.createElement(Label, {\n        for: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Password\"), React.createElement(Input, {\n        type: \"password\",\n        name: \"password\",\n        id: \"password\",\n        placeholder: \"Password\",\n        onChange: this.onChange,\n        className: \"mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }), React.createElement(Button, {\n        color: \"dark\",\n        style: {\n          marginTop: '2rem'\n        },\n        block: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"Login\"))))));\n    }\n  }]);\n\n  return LoginModal;\n}(React.Component);\n\nLoginModal.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  error: PropTypes.object.isRequired,\n  login: PropTypes.func.isRequired,\n  clearErrors: PropTypes.func.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isAuthenticated: state.auth.isAuthenticated,\n    error: state.error\n  };\n};\n\nexport default connect(mapStateToProps, {\n  login: login,\n  clearErrors: clearErrors\n})(LoginModal);","map":{"version":3,"sources":["C:\\Users\\paval\\Documents\\WebDev\\news-website\\src\\components\\admin\\auth\\LoginModal.js"],"names":["React","Button","Modal","ModalHeader","ModalBody","Form","FormGroup","Label","Input","Alert","connect","PropTypes","login","clearErrors","LoginModal","state","modal","email","password","msg","toggle","props","setState","onChange","e","target","name","value","onSubmit","preventDefault","user","prevProps","error","isAuthenticated","id","marginTop","Component","propTypes","bool","object","isRequired","func","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n    Button,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    Alert\r\n} from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { login } from '../../../actions/authActions';\r\nimport { clearErrors } from '../../../actions/errorActions';\r\n\r\nclass LoginModal extends React.Component{\r\n    state = {\r\n        modal: false,\r\n        email: '',\r\n        password: '',\r\n        msg : null\r\n    }\r\n\r\n    static propTypes= {\r\n        isAuthenticated: PropTypes.bool,\r\n        error: PropTypes.object.isRequired,\r\n        login: PropTypes.func.isRequired,\r\n        clearErrors: PropTypes.func.isRequired\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { error, isAuthenticated } = this.props;\r\n        if(error !== prevProps.error) {\r\n            //Check for register error\r\n            if(error.id === 'LOGIN_FAIL'){\r\n                this.setState({msg: error.msg.msg})\r\n            } else {\r\n                this.setState({msg: null})\r\n            }\r\n        }\r\n\r\n        // IF Authenticated, close modal\r\n        if(this.state.modal){\r\n            if(isAuthenticated) {\r\n                this.toggle();\r\n            }\r\n        }\r\n    }\r\n\r\n    toggle = () => {\r\n        // Clear errors\r\n        this.props.clearErrors();\r\n\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        });\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value});\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const { email, password } = this.state;\r\n\r\n        const user = {\r\n            email,\r\n            password\r\n        }\r\n\r\n        // Attempt to login\r\n        this.props.login(user);\r\n        \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Button \r\n                    onClick= {this.toggle}\r\n                >\r\n                    Login\r\n                </Button>\r\n                <Modal\r\n                    isOpen = {this.state.modal}\r\n                    toggle = {this.toggle}\r\n                >\r\n                    <ModalHeader\r\n                        toggle= {this.toggle}\r\n                    >\r\n                    Login\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        { this.state.msg ? <Alert color = \"danger\">{this.state.msg}</Alert> :  null}\r\n                        <Form\r\n                            onSubmit={this.onSubmit}>\r\n                            <FormGroup>\r\n                                <Label for=\"email\">\r\n                                    Email\r\n                                </Label>\r\n                                <Input\r\n                                    type=\"email\"\r\n                                    name = \"email\"\r\n                                    id = \"email\"\r\n                                    placeholder = \"Email\"\r\n                                    onChange = {this.onChange}\r\n                                    className = \"mb-3\"\r\n                                />\r\n                                <Label for=\"password\">\r\n                                    Password\r\n                                </Label>\r\n                                <Input\r\n                                    type=\"password\"\r\n                                    name = \"password\"\r\n                                    id = \"password\"\r\n                                    placeholder = \"Password\"\r\n                                    onChange = {this.onChange}\r\n                                    className = \"mb-3\"\r\n                                />\r\n                                <Button\r\n                                    color=\"dark\"\r\n                                    style = {{marginTop: '2rem'}}\r\n                                    block\r\n                                >\r\n                                Login\r\n                                </Button>\r\n                            </FormGroup>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    error: state.error\r\n})\r\n\r\nexport default connect(mapStateToProps, {login, clearErrors})(LoginModal);"]},"metadata":{},"sourceType":"module"}