{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\src\\\\components\\\\IPGrabber.js\";\n// this is the complete code, copy and use\nimport React from 'react';\nvar API = 'https://geoip-db.com/json';\nvar DEFAULT_QUERY = 'redux';\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      hits: [],\n      isLoading: false\n    };\n    _this.setStateHandler = _this.setStateHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"setStateHandler\",\n    value: function setStateHandler() {\n      var _this2 = this;\n\n      this.setState({\n        isLoading: true\n      });\n      fetch(API + DEFAULT_QUERY).then(function (response) {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error('Something went wrong ...');\n        }\n      }).then(function (data) {\n        return _this2.setState({\n          hits: data.IPv4,\n          isLoading: false\n        });\n      }).catch(function (error) {\n        return _this2.setState({\n          error: error,\n          isLoading: false\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.setStateHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Click\"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, this.state.hits), console.log(this.state.hits));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\paval\\Documents\\WebDev\\news-website\\src\\components\\IPGrabber.js"],"names":["React","API","DEFAULT_QUERY","App","props","state","hits","isLoading","setStateHandler","bind","setState","fetch","then","response","ok","json","Error","data","IPv4","catch","error","console","log","Component"],"mappings":";;;;;;;AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,GAAG,GAAG,2BAAZ;AACA,IAAMC,aAAa,GAAG,OAAtB;;IAEMC,G;;;;;AACN,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACnB,6EAAMA,KAAN;AAEI,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEjBC,MAAAA,SAAS,EAAE;AAFM,KAAb;AAKJ,UAAKC,eAAL,GAAuB,MAAKA,eAAL,CAAqBC,IAArB,uDAAvB;AARmB;AAUlB;;;;sCAEiB;AAAA;;AAClB,WAAKC,QAAL,CAAc;AAAEH,QAAAA,SAAS,EAAE;AAAb,OAAd;AAEAI,MAAAA,KAAK,CAACV,GAAG,GAAGC,aAAP,CAAL,CACOU,IADP,CACY,UAAAC,QAAQ,EAAI;AAChB,YAAIA,QAAQ,CAACC,EAAb,EAAiB;AACf,iBAAOD,QAAQ,CAACE,IAAT,EAAP;AACD,SAFD,MAEO;AACL,gBAAM,IAAIC,KAAJ,CAAU,0BAAV,CAAN;AACD;AACF,OAPP,EAQOJ,IARP,CAQY,UAAAK,IAAI;AAAA,eAAI,MAAI,CAACP,QAAL,CAAc;AAAEJ,UAAAA,IAAI,EAAEW,IAAI,CAACC,IAAb;AAAmBX,UAAAA,SAAS,EAAE;AAA9B,SAAd,CAAJ;AAAA,OARhB,EASOY,KATP,CASa,UAAAC,KAAK;AAAA,eAAI,MAAI,CAACV,QAAL,CAAc;AAAEU,UAAAA,KAAK,EAALA,KAAF;AAASb,UAAAA,SAAS,EAAE;AAApB,SAAd,CAAJ;AAAA,OATlB;AAUG;;;6BAEM;AACT,aACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAQ,QAAA,OAAO,EAAI,KAAKC,eAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKH,KAAL,CAAWC,IAAhB,CAFA,EAGCe,OAAO,CAACC,GAAR,CAAY,KAAKjB,KAAL,CAAWC,IAAvB,CAHD,CADA;AAOC;;;;EApCiBN,KAAK,CAACuB,S;;AAuCxB,eAAepB,GAAf","sourcesContent":["// this is the complete code, copy and use\r\n\r\nimport React from 'react';\r\n\r\nconst API = 'https://geoip-db.com/json';\r\nconst DEFAULT_QUERY = 'redux';\r\n\r\nclass App extends React.Component {\r\nconstructor(props) {\r\nsuper(props);\r\n\r\n    this.state = {\r\n      hits: [],\r\nisLoading: false,\r\n    };\r\n\r\nthis.setStateHandler = this.setStateHandler.bind(this);\r\n\r\n}\r\n\r\nsetStateHandler() {\r\nthis.setState({ isLoading: true });\r\n\r\nfetch(API + DEFAULT_QUERY)\r\n      .then(response => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else {\r\n          throw new Error('Something went wrong ...');\r\n        }\r\n      })\r\n      .then(data => this.setState({ hits: data.IPv4, isLoading: false }))\r\n      .catch(error => this.setState({ error, isLoading: false }));\r\n  }\r\n\r\nrender() {\r\nreturn (\r\n<div>\r\n<button onClick = {this.setStateHandler}>Click</button>\r\n<h2>{this.state.hits}</h2>\r\n{console.log(this.state.hits)}\r\n</div>\r\n);\r\n}\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}