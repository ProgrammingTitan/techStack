{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\src\\\\components\\\\Thread.js\";\nimport React from 'react';\n\nvar Thread =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Thread, _React$Component);\n\n  function Thread(props) {\n    var _this;\n\n    _classCallCheck(this, Thread);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Thread).call(this, props));\n    _this.state = {\n      data: {},\n      gotData: false,\n      inputText: '',\n      subreddit: _this.props.subreddit\n    };\n    return _this;\n  }\n\n  _createClass(Thread, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var response, json;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"https://www.reddit.com/r/\".concat(this.state.subreddit, \"/.json\"));\n\n              case 2:\n                response = _context.sent;\n                _context.next = 5;\n                return response.json();\n\n              case 5:\n                json = _context.sent;\n                this.setState({\n                  data: json,\n                  gotData: true\n                });\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Thread;\n}(React.Component);\n\nexport default Thread;","map":{"version":3,"sources":["C:\\Users\\paval\\Documents\\WebDev\\news-website\\src\\components\\Thread.js"],"names":["React","Thread","props","state","data","gotData","inputText","subreddit","fetch","response","json","setState","Component"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAEMC,M;;;;;AAEF,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,gFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,EADG;AAETC,MAAAA,OAAO,EAAE,KAFA;AAGTC,MAAAA,SAAS,EAAE,EAHF;AAITC,MAAAA,SAAS,EAAG,MAAKL,KAAL,CAAWK;AAJd,KAAb;AAFe;AAQlB;;;;;;;;;;;;;;uBAE0BC,KAAK,oCAA6B,KAAKL,KAAL,CAAWI,SAAxC,Y;;;AAAtBE,gBAAAA,Q;;uBACaA,QAAQ,CAACC,IAAT,E;;;AAAbA,gBAAAA,I;AACN,qBAAKC,QAAL,CAAc;AACVP,kBAAAA,IAAI,EAAEM,IADI;AAEVL,kBAAAA,OAAO,EAAE;AAFC,iBAAd;;;;;;;;;;;;;;;;;;6BAOI;AACJ,aAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ;AASH;;;;EA/BgBL,KAAK,CAACY,S;;AAoC3B,eAAeX,MAAf","sourcesContent":["import React from 'react';\r\n\r\nclass Thread extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: {},\r\n            gotData: false,\r\n            inputText: '',\r\n            subreddit : this.props.subreddit\r\n        };\r\n    }\r\n    async componentDidMount() {\r\n        const response = await fetch(`https://www.reddit.com/r/${this.state.subreddit}/.json`);\r\n        const json = await response.json();\r\n        this.setState({\r\n            data: json,\r\n            gotData: true,\r\n        });\r\n\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            \r\n\r\n\r\n            <div>\r\n            \r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Thread;"]},"metadata":{},"sourceType":"module"}