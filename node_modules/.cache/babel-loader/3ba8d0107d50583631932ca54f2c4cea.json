{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\src\\\\components\\\\Thread.js\";\nimport React, { Component } from 'react';\nimport { Jumbotron, Button, Media } from 'reactstrap'; // function Thread(props) {\n//     const styles = {\n//         titleStyle: {\n//             color: 'red',\n//         },\n//         thumbSize: {\n//             width: 140,\n//             height: 105\n//         },\n//     };\n//     const { data } = props;\n//     return (\n//         <table>\n//         <tr>\n//             <td style={styles.titleStyle}>{props.index}</td>\n//             <td>\n//                 {\n//                     (data.thumbnail !== \"self\") \n//                     ? (<img src={data.thumbnail}></img>) \n//                     : (<img style={styles.thumbSize} src=\"https://b.thumbs.redditmedia.com/en9Scp_T9_RTkVsX_YNUqZOyj-O5V63wIAQ-TRKdsFA.png\"></img>)\n//                 }\n//             </td>\n//             <td>\n//                 <a target=\"_blank\" href={`https://reddit.com${data.permalink}`}>\n//                     <p>{props.title}</p>\n//                     <p>{`${props.points} points - ${props.comments} comments - ${props.subreddit} - Posted by ${props.user}`}</p>\n//                 </a>\n//             </td>\n//         </tr>\n//         </table>\n//     );\n// }\n\nvar Thread =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Thread, _React$Component);\n\n  function Thread() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Thread);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Thread)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      styles: {\n        titleStyle: {\n          color: 'red'\n        },\n        thumbSize: {\n          width: 140,\n          height: 105\n        }\n      },\n      data: _this.props\n    };\n    return _this;\n  }\n\n  _createClass(Thread, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, this.props.data.thumbnail !== \"self\" ? React.createElement(\"img\", {\n        src: this.props.data.thumbnail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }) : React.createElement(\"img\", {\n        src: \"https://b.thumbs.redditmedia.com/en9Scp_T9_RTkVsX_YNUqZOyj-O5V63wIAQ-TRKdsFA.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"link\",\n        href: this.props.data.url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, this.props.title))))), React.createElement(\"p\", {\n        className: \"lead\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Button, {\n        outline: true,\n        color: \"success\",\n        href: this.props.data.url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Learn More\")))), React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        style: this.state.styles.titleStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, this.props.index), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, this.props.data.thumbnail !== \"self\" ? React.createElement(\"img\", {\n        src: this.props.data.thumbnail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }) : React.createElement(\"img\", {\n        /*style={this.props.styles.thumbSize}*/\n        src: \"https://b.thumbs.redditmedia.com/en9Scp_T9_RTkVsX_YNUqZOyj-O5V63wIAQ-TRKdsFA.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        target: \"_blank\",\n        href: \"https://reddit.com\".concat(this.props.data.permalink),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, this.props.title), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"\".concat(this.props.points, \" points - \").concat(this.props.comments, \" comments - \").concat(this.props.subreddit, \" - Posted by \").concat(this.props.user)))))));\n    }\n  }]);\n\n  return Thread;\n}(React.Component);\n\nexport default Thread;","map":{"version":3,"sources":["C:\\Users\\paval\\Documents\\WebDev\\news-website\\src\\components\\Thread.js"],"names":["React","Component","Jumbotron","Button","Media","Thread","state","styles","titleStyle","color","thumbSize","width","height","data","props","thumbnail","url","title","index","permalink","points","comments","subreddit","user"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {Jumbotron, Button, Media} from 'reactstrap';\r\n\r\n// function Thread(props) {\r\n//     const styles = {\r\n//         titleStyle: {\r\n//             color: 'red',\r\n//         },\r\n//         thumbSize: {\r\n//             width: 140,\r\n//             height: 105\r\n//         },\r\n//     };\r\n//     const { data } = props;\r\n//     return (\r\n//         <table>\r\n//         <tr>\r\n//             <td style={styles.titleStyle}>{props.index}</td>\r\n//             <td>\r\n//                 {\r\n//                     (data.thumbnail !== \"self\") \r\n//                     ? (<img src={data.thumbnail}></img>) \r\n//                     : (<img style={styles.thumbSize} src=\"https://b.thumbs.redditmedia.com/en9Scp_T9_RTkVsX_YNUqZOyj-O5V63wIAQ-TRKdsFA.png\"></img>)\r\n//                 }\r\n//             </td>\r\n//             <td>\r\n//                 <a target=\"_blank\" href={`https://reddit.com${data.permalink}`}>\r\n//                     <p>{props.title}</p>\r\n//                     <p>{`${props.points} points - ${props.comments} comments - ${props.subreddit} - Posted by ${props.user}`}</p>\r\n//                 </a>\r\n//             </td>\r\n//         </tr>\r\n//         </table>\r\n//     );\r\n// }\r\n\r\nclass Thread extends React.Component{\r\n    state = {\r\n        styles : {\r\n            titleStyle: {\r\n                color: 'red',\r\n            },\r\n            thumbSize: {\r\n                width: 140,\r\n                height: 105\r\n            },\r\n        },\r\n\r\n        data : this.props\r\n\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n            <div>\r\n      <Jumbotron>\r\n          <table>\r\n              <tr>\r\n              <td>{\r\n                        (this.props.data.thumbnail !== \"self\") \r\n                        ? (<img src={this.props.data.thumbnail}></img>) \r\n                        : (<img src=\"https://b.thumbs.redditmedia.com/en9Scp_T9_RTkVsX_YNUqZOyj-O5V63wIAQ-TRKdsFA.png\"></img>)\r\n                    }</td>\r\n      <td><h3><a className=\"link\" href={this.props.data.url}>{this.props.title}</a></h3></td>\r\n      \r\n      </tr>\r\n      </table>\r\n        <p className=\"lead\">\r\n          <Button outline color=\"success\" href={this.props.data.url}>Learn More</Button>\r\n        </p>\r\n      </Jumbotron>\r\n    </div>\r\n            <table>\r\n            <tr>\r\n                <td style={this.state.styles.titleStyle}>{this.props.index}</td>\r\n                <td>\r\n                    {\r\n                        (this.props.data.thumbnail !== \"self\") \r\n                        ? (<img src={this.props.data.thumbnail}></img>) \r\n                        : (<img /*style={this.props.styles.thumbSize}*/ src=\"https://b.thumbs.redditmedia.com/en9Scp_T9_RTkVsX_YNUqZOyj-O5V63wIAQ-TRKdsFA.png\"></img>)\r\n                    }\r\n                </td>\r\n                <td>\r\n                    <a target=\"_blank\" href={`https://reddit.com${this.props.data.permalink}`}>\r\n                        <p>{this.props.title}</p>\r\n                        <p>{`${this.props.points} points - ${this.props.comments} comments - ${this.props.subreddit} - Posted by ${this.props.user}`}</p>\r\n                    </a>\r\n                </td>\r\n            </tr>\r\n            </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Thread;"]},"metadata":{},"sourceType":"module"}