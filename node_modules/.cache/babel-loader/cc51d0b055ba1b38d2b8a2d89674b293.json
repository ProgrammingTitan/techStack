{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\src\\\\components\\\\admin\\\\HeadlineList.js\";\nimport React from 'react';\nimport { Container, Button, Media, Row, Col } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { getHeadlines, deleteHeadline } from './../../actions/headlineActions';\nimport PropTypes from 'prop-types';\nvar imgStyle = {\n  maxHeight: 300,\n  maxWidth: 300\n};\nvar mediaStyle = {\n  color: \"black\",\n  \"text-decoration\": \"none\",\n  margin: \"auto\",\n  \"margin-left\": \"none\"\n};\n\nvar HeadlineList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(HeadlineList, _React$Component);\n\n  function HeadlineList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, HeadlineList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(HeadlineList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onDeleteClick = function (_id) {\n      _this.props.deleteHeadline(_id);\n    };\n\n    return _this;\n  }\n\n  _createClass(HeadlineList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getHeadlines();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var headlines = this.props.headline.headlines;\n      return React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, headlines.map(function (_ref) {\n        var _id = _ref._id,\n            headline = _ref.headline,\n            description = _ref.description,\n            imageURL = _ref.imageURL,\n            url = _ref.url;\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, _this2.props.isAuthenticated ? React.createElement(Button, {\n          className: \"remove-btn\",\n          color: \"danger\",\n          size: \"sm\",\n          onClick: _this2.onDeleteClick.bind(_this2, _id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, \"\\xD7\") : null, React.createElement(Media, {\n          className: \"mb-4\",\n          href: url,\n          style: mediaStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, React.createElement(Media, {\n          left: true,\n          href: url,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, React.createElement(Col, {\n          xs: \"12\",\n          sm: \"12\",\n          md: \"2\",\n          lg: \"2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, React.createElement(Media, {\n          className: \"mr-auto\",\n          object: true,\n          src: imageURL,\n          style: imgStyle,\n          alt: \"Generic placeholder image\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }))), React.createElement(Col, {\n          xs: \"12\",\n          sm: \"12\",\n          md: \"7\",\n          lg: \"7\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, React.createElement(Media, {\n          body: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, React.createElement(Media, {\n          heading: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, headline), description))))) //     <a href={url}> \n        // {this.props.isAuthenticated ? <Button\n        // className=\"remove-btn\"\n        // color=\"danger\"\n        // size = \"sm\"\n        // onClick = {this.onDeleteClick.bind(this, _id)}\n        // >&times;</Button> : null}\n        //     <Media>\n        //         <Media left href=\"#\">\n        //         <img src={imageURL} width=\"250\" height=\"200\" alt=\"me\" />\n        //         </Media>\n        //         <Media body>\n        //             <Media heading>\n        //             {headline}\n        //             </Media>\n        //             {description}\n        //         </Media>\n        //     </Media>\n        //     </a>\n        // </div>\n        ;\n      })));\n    }\n  }]);\n\n  return HeadlineList;\n}(React.Component);\n\nHeadlineList.propTypes = {\n  getHeadlines: PropTypes.func.isRequired,\n  headline: PropTypes.object.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    headline: state.headline,\n    isAuthenticated: state.auth.isAuthenticated\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getHeadlines: getHeadlines,\n  deleteHeadline: deleteHeadline\n})(HeadlineList);","map":{"version":3,"sources":["C:\\Users\\paval\\Documents\\WebDev\\news-website\\src\\components\\admin\\HeadlineList.js"],"names":["React","Container","Button","Media","Row","Col","connect","getHeadlines","deleteHeadline","PropTypes","imgStyle","maxHeight","maxWidth","mediaStyle","color","margin","HeadlineList","onDeleteClick","_id","props","headlines","headline","map","description","imageURL","url","isAuthenticated","bind","Component","propTypes","func","isRequired","object","bool","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Container, Button, Media, Row, Col } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { getHeadlines, deleteHeadline } from './../../actions/headlineActions';\r\nimport PropTypes from 'prop-types';\r\n\r\n    const imgStyle = {\r\n    maxHeight: 300,\r\n    maxWidth: 300\r\n  }\r\n\r\n  const mediaStyle = {\r\n    color: \"black\",\r\n    \"text-decoration\" : \"none\",\r\n    margin: \"auto\",\r\n    \"margin-left\" : \"none\"\r\n}\r\n\r\nclass HeadlineList extends React.Component{\r\n\r\n    componentDidMount(){\r\n        this.props.getHeadlines();\r\n    }\r\n\r\n    onDeleteClick = (_id) => {\r\n        this.props.deleteHeadline(_id);\r\n    };\r\n\r\n    render(){\r\n\r\n        const { headlines }  = this.props.headline\r\n        return(\r\n            <Container fluid>\r\n            <ul>\r\n                {headlines.map(({ _id, headline, description, imageURL,url}) => (\r\n                    <div>\r\n                        {this.props.isAuthenticated ? <Button\r\n                    className=\"remove-btn\"\r\n                    color=\"danger\"\r\n                    size = \"sm\"\r\n                    onClick = {this.onDeleteClick.bind(this, _id)}\r\n                    >&times;</Button> : null}\r\n                        <Media className= \"mb-4\" href={url} style={mediaStyle}>\r\n                            <Row>\r\n      <Media left href={url}>\r\n      <Col  xs=\"12\" sm=\"12\" md=\"2\" lg=\"2\" >\r\n        <Media  className= \"mr-auto\" object src={imageURL} style={imgStyle} alt=\"Generic placeholder image\" />\r\n      </Col>\r\n      </Media>\r\n      <Col  xs=\"12\" sm=\"12\"  md=\"7\" lg=\"7\" >\r\n      <Media body>\r\n        <Media heading >\r\n          {headline}\r\n        </Media>\r\n            {description}\r\n        </Media>\r\n        </Col>\r\n        </Row>\r\n    </Media>\r\n                    </div>\r\n                    //     <a href={url}> \r\n                    // {this.props.isAuthenticated ? <Button\r\n                    // className=\"remove-btn\"\r\n                    // color=\"danger\"\r\n                    // size = \"sm\"\r\n                    // onClick = {this.onDeleteClick.bind(this, _id)}\r\n                    // >&times;</Button> : null}\r\n                    //     <Media>\r\n                    //         <Media left href=\"#\">\r\n                    //         <img src={imageURL} width=\"250\" height=\"200\" alt=\"me\" />\r\n                    //         </Media>\r\n                    //         <Media body>\r\n                    //             <Media heading>\r\n                    //             {headline}\r\n                    //             </Media>\r\n                    //             {description}\r\n                    //         </Media>\r\n                    //     </Media>\r\n                    //     </a>\r\n                    // </div>\r\n                ))}\r\n            </ul>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nHeadlineList.propTypes = {\r\n    getHeadlines: PropTypes.func.isRequired,\r\n    headline: PropTypes.object.isRequired,\r\n    isAuthenticated: PropTypes.bool\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    headline: state.headline,\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { getHeadlines, deleteHeadline })(HeadlineList);"]},"metadata":{},"sourceType":"module"}