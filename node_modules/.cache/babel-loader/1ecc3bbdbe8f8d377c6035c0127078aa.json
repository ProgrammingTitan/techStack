{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { GET_UPDATES, ADD_UPDATE, DELETE_UPDATE, UPDATES_LOADING } from './../actions/types';\nvar initialState = {\n  updates: [],\n  loading: false\n};\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_UPDATES:\n      return _objectSpread({}, state, {\n        updates: action.payload,\n        loading: false\n      });\n\n    case DELETE_UPDATE:\n      return _objectSpread({}, state, {\n        updates: state.updates.filter(function (update) {\n          return update._id !== action.payload;\n        })\n      });\n\n    case ADD_UPDATE:\n      return _objectSpread({}, state, {\n        updates: [action.payload].concat(_toConsumableArray(state.updates))\n      });\n\n    case UPDATES_LOADING:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:\\Users\\paval\\Documents\\WebDev\\news-website\\src\\reducers\\updateReducer.js"],"names":["GET_UPDATES","ADD_UPDATE","DELETE_UPDATE","UPDATES_LOADING","initialState","updates","loading","state","action","type","payload","filter","update","_id"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,UAAtB,EAAkCC,aAAlC,EAAiDC,eAAjD,QAAuE,oBAAvE;AAGA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,EADQ;AAEjBC,EAAAA,OAAO,EAAE;AAFQ,CAArB;AAMC,eAAe,YAAwC;AAAA,MAA9BC,KAA8B,uEAAtBH,YAAsB;AAAA,MAARI,MAAQ;;AACpD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKT,WAAL;AACI,+BACOO,KADP;AAEIF,QAAAA,OAAO,EAAEG,MAAM,CAACE,OAFpB;AAGIJ,QAAAA,OAAO,EAAE;AAHb;;AAKJ,SAAKJ,aAAL;AACI,+BACOK,KADP;AAEIF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,CAAcM,MAAd,CAAqB,UAAAC,MAAM;AAAA,iBAAIA,MAAM,CAACC,GAAP,KAAeL,MAAM,CAACE,OAA1B;AAAA,SAA3B;AAFb;;AAIJ,SAAKT,UAAL;AACI,+BACOM,KADP;AAEIF,QAAAA,OAAO,GAAGG,MAAM,CAACE,OAAV,4BAAqBH,KAAK,CAACF,OAA3B;AAFX;;AAIJ,SAAKF,eAAL;AACI,+BACOI,KADP;AAEID,QAAAA,OAAO,EAAE;AAFb;;AAKJ;AACI,aAAOC,KAAP;AAxBR;AA2BF","sourcesContent":["import { GET_UPDATES, ADD_UPDATE, DELETE_UPDATE, UPDATES_LOADING} from './../actions/types';\r\n \r\n \r\nconst initialState = {\r\n    updates: [],\r\n    loading: false\r\n}\r\n\r\n\r\n export default function (state = initialState, action) {\r\n    switch(action.type){\r\n        case GET_UPDATES:\r\n            return {\r\n                ...state,\r\n                updates: action.payload,\r\n                loading: false\r\n            };\r\n        case DELETE_UPDATE:\r\n            return{\r\n                ...state,\r\n                updates: state.updates.filter(update => update._id !== action.payload)\r\n            };\r\n        case ADD_UPDATE:\r\n            return{\r\n                ...state,\r\n                updates: [action.payload,...state.updates]\r\n            };\r\n        case UPDATES_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n }"]},"metadata":{},"sourceType":"module"}