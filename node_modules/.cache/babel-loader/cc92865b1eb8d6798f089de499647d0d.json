{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\src\\\\components\\\\Thread.js\";\nimport React from 'react';\n\nvar Thread =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Thread, _React$Component);\n\n  function Thread() {\n    _classCallCheck(this, Thread);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Thread).apply(this, arguments));\n  }\n\n  _createClass(Thread, [{\n    key: \"render\",\n\n    /*\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                data: {},\r\n                gotData: false,\r\n                inputText: '',\r\n                subreddit : this.props.subreddit\r\n            };\r\n        }\r\n        async componentDidMount() {\r\n            const response = await fetch(`https://www.reddit.com/r/${this.state.subreddit}/.json`);\r\n            const json = await response.json();\r\n            this.setState({\r\n                data: json,\r\n                gotData: true,\r\n            });\r\n    \r\n        }\r\n    */\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Thread;\n}(React.Component);\n\nexport default Thread;","map":{"version":3,"sources":["C:\\Users\\paval\\Documents\\WebDev\\news-website\\src\\components\\Thread.js"],"names":["React","Thread","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAEMC,M;;;;;;;;;;;;;;AACN;;;;;;;;;;;;;;;;;;;;6BAoBY;AACJ,aAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ;AASH;;;;EA/BgBD,KAAK,CAACE,S;;AAoC3B,eAAeD,MAAf","sourcesContent":["import React from 'react';\r\n\r\nclass Thread extends React.Component{\r\n/*\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: {},\r\n            gotData: false,\r\n            inputText: '',\r\n            subreddit : this.props.subreddit\r\n        };\r\n    }\r\n    async componentDidMount() {\r\n        const response = await fetch(`https://www.reddit.com/r/${this.state.subreddit}/.json`);\r\n        const json = await response.json();\r\n        this.setState({\r\n            data: json,\r\n            gotData: true,\r\n        });\r\n\r\n    }\r\n*/\r\n    render(){\r\n        return(\r\n            \r\n\r\n\r\n            <div>\r\n            {/* {console.log(this.state.data)} */}\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Thread;"]},"metadata":{},"sourceType":"module"}