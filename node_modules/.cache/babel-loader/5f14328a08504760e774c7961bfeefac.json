{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\paval\\\\Documents\\\\WebDev\\\\news-website\\\\src\\\\components\\\\CategoryPage.js\";\nimport React from 'react';\nimport Nav from './Navigation';\nimport Thread from './Thread';\n\nvar CategoryPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CategoryPage, _React$Component);\n\n  function CategoryPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CategoryPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CategoryPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      subreddit: _this.props.subreddit,\n      data: {},\n      gotData: false\n    };\n    return _this;\n  }\n\n  _createClass(CategoryPage, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(\"1\");\n\n      this.getReddit =\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(e) {\n          var subreddit, response, json;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  console.log(\"1.5\");\n                  e.preventDefault();\n                  subreddit = _this2.props.subreddit;\n                  _context.next = 5;\n                  return fetch(\"https://www.reddit.com/\".concat(subreddit, \"/.json\"));\n\n                case 5:\n                  response = _context.sent;\n                  _context.next = 8;\n                  return response.json();\n\n                case 8:\n                  json = _context.sent;\n                  console.log(\"json\" + json);\n\n                  _this2.setState({\n                    data: json,\n                    gotData: true\n                  });\n\n                case 11:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }();\n\n      this.getReddit();\n      console.log(\"2\");\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), React.createElement(Thread, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \" CategoryPage\"));\n    }\n  }]);\n\n  return CategoryPage;\n}(React.Component);\n\nexport default CategoryPage;","map":{"version":3,"sources":["C:\\Users\\paval\\Documents\\WebDev\\news-website\\src\\components\\CategoryPage.js"],"names":["React","Nav","Thread","CategoryPage","state","subreddit","props","data","gotData","console","log","getReddit","e","preventDefault","fetch","response","json","setState","Component"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;IAGMC,Y;;;;;;;;;;;;;;;;;UAEFC,K,GAAM;AACFC,MAAAA,SAAS,EAAE,MAAKC,KAAL,CAAWD,SADpB;AAEFE,MAAAA,IAAI,EAAE,EAFJ;AAGFC,MAAAA,OAAO,EAAE;AAHP,K;;;;;;6BASF;AAAA;;AAEJC,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;;AACA,WAAKC,SAAL;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAiB,iBAAOC,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAEbH,kBAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAE,kBAAAA,CAAC,CAACC,cAAF;AAEIR,kBAAAA,SALS,GAKG,MAAI,CAACC,KAAL,CAAWD,SALd;AAAA;AAAA,yBAOUS,KAAK,kCAA2BT,SAA3B,YAPf;;AAAA;AAOPU,kBAAAA,QAPO;AAAA;AAAA,yBAQMA,QAAQ,CAACC,IAAT,EARN;;AAAA;AAQPA,kBAAAA,IARO;AASbP,kBAAAA,OAAO,CAACC,GAAR,CAAY,SAASM,IAArB;;AAEA,kBAAA,MAAI,CAACC,QAAL,CAAc;AACVV,oBAAAA,IAAI,EAAES,IADI;AAEVR,oBAAAA,OAAO,EAAE;AAFC,mBAAd;;AAXa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAjB;;AAAA;AAAA;AAAA;AAAA;;AAiBA,WAAKG,SAAL;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAHJ,CADJ;AAOH;;;;EAxC0BV,KAAK,CAACkB,S;;AA6CjC,eAAef,YAAf","sourcesContent":["import React from 'react';\r\nimport Nav from './Navigation';\r\nimport Thread from './Thread';\r\n\r\n\r\nclass CategoryPage extends React.Component{\r\n\r\n    state={\r\n        subreddit: this.props.subreddit,\r\n        data: {},\r\n        gotData: false\r\n    }\r\n\r\n   \r\n\r\n\r\nrender(){\r\n\r\n    console.log(\"1\");\r\n    this.getReddit = async (e)  => {\r\n\r\n        console.log(\"1.5\");\r\n        e.preventDefault();\r\n\r\n        let subreddit = this.props.subreddit;\r\n        \r\n        const response = await fetch(`https://www.reddit.com/${subreddit}/.json`);\r\n        const json = await response.json();\r\n        console.log(\"json\" + json);\r\n        \r\n        this.setState({\r\n            data: json,\r\n            gotData: true\r\n    });\r\n    }\r\n\r\n    this.getReddit();\r\n    console.log(\"2\");\r\n    return(\r\n        <div>\r\n            <Nav />\r\n            <Thread />\r\n            <p> CategoryPage</p>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n}\r\n\r\nexport default CategoryPage;"]},"metadata":{},"sourceType":"module"}